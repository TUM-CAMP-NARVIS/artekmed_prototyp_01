#version 330 core

// Interpolated values from the vertex shaders
in vec2 UV;

// Ouput data
out vec3 color2;

// Values that stay constant for the whole mesh.
uniform sampler2D myTextureSampler;
uniform sampler2D depthSampler;
const float zNear= 150.0f;
const float zFar= 1000.0f;
void main(){

	// Output color = color of the texture at the specified UV
	vec4 depthSample= texture2D(depthSampler,  UV);
	float depth = depthSample.x * 255.0 / 256.0 +
             		 depthSample.y * 255.0 / 65536.0 +
             		 depthSample.z * 255.0 / 16777216.0;
	//float z_n = 2.0 * z_b - 1.0;
	float z_e = (zNear * zFar) / (zFar - depth * (zFar - zNear));
    //float z_e = 2.0 * zNear * zFar  / (zFar + zNear - z_n * (zFar - zNear));
	if(depth > -1)
	{
		gl_FragDepth=-0.999999;
	}
	if(depth <1)
	{
		gl_FragDepth= 0.999999;
	}
	color2 =  texture2D( myTextureSampler, UV ).rgb;
}